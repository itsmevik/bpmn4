{"ast":null,"code":"import inherits from 'inherits';\nimport { is } from '../../../util/ModelUtil';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { filter, forEach } from 'min-dash';\nexport default function AssociationBehavior(injector, modeling) {\n  injector.invoke(CommandInterceptor, this);\n  this.postExecute('shape.move', function (context) {\n    var newParent = context.newParent,\n        shape = context.shape;\n    var associations = filter(shape.incoming.concat(shape.outgoing), function (connection) {\n      return is(connection, 'bpmn:Association');\n    });\n    forEach(associations, function (association) {\n      modeling.moveConnection(association, {\n        x: 0,\n        y: 0\n      }, newParent);\n    });\n  }, true);\n}\ninherits(AssociationBehavior, CommandInterceptor);\nAssociationBehavior.$inject = ['injector', 'modeling'];","map":{"version":3,"sources":["/Users/believecreative/Kumar/bpmn/node_modules/bpmn-js/lib/features/modeling/behavior/AssociationBehavior.js"],"names":["inherits","is","CommandInterceptor","filter","forEach","AssociationBehavior","injector","modeling","invoke","postExecute","context","newParent","shape","associations","incoming","concat","outgoing","connection","association","moveConnection","x","y","$inject"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,SAASC,EAAT,QAAmB,yBAAnB;AAEA,OAAOC,kBAAP,MAA+B,2CAA/B;AAEA,SACEC,MADF,EAEEC,OAFF,QAGO,UAHP;AAMA,eAAe,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,QAAvC,EAAiD;AAC9DD,EAAAA,QAAQ,CAACE,MAAT,CAAgBN,kBAAhB,EAAoC,IAApC;AAEA,OAAKO,WAAL,CAAiB,YAAjB,EAA+B,UAASC,OAAT,EAAkB;AAC/C,QAAIC,SAAS,GAAGD,OAAO,CAACC,SAAxB;AAAA,QACIC,KAAK,GAAGF,OAAO,CAACE,KADpB;AAGA,QAAIC,YAAY,GAAGV,MAAM,CAACS,KAAK,CAACE,QAAN,CAAeC,MAAf,CAAsBH,KAAK,CAACI,QAA5B,CAAD,EAAwC,UAASC,UAAT,EAAqB;AACpF,aAAOhB,EAAE,CAACgB,UAAD,EAAa,kBAAb,CAAT;AACD,KAFwB,CAAzB;AAIAb,IAAAA,OAAO,CAACS,YAAD,EAAe,UAASK,WAAT,EAAsB;AAC1CX,MAAAA,QAAQ,CAACY,cAAT,CAAwBD,WAAxB,EAAqC;AAAEE,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAArC,EAAqDV,SAArD;AACD,KAFM,CAAP;AAGD,GAXD,EAWG,IAXH;AAYD;AAEDX,QAAQ,CAACK,mBAAD,EAAsBH,kBAAtB,CAAR;AAEAG,mBAAmB,CAACiB,OAApB,GAA8B,CAC5B,UAD4B,EAE5B,UAF4B,CAA9B","sourcesContent":["import inherits from 'inherits';\r\n\r\nimport { is } from '../../../util/ModelUtil';\r\n\r\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport {\r\n  filter,\r\n  forEach\r\n} from 'min-dash';\r\n\r\n\r\nexport default function AssociationBehavior(injector, modeling) {\r\n  injector.invoke(CommandInterceptor, this);\r\n\r\n  this.postExecute('shape.move', function(context) {\r\n    var newParent = context.newParent,\r\n        shape = context.shape;\r\n\r\n    var associations = filter(shape.incoming.concat(shape.outgoing), function(connection) {\r\n      return is(connection, 'bpmn:Association');\r\n    });\r\n\r\n    forEach(associations, function(association) {\r\n      modeling.moveConnection(association, { x: 0, y: 0 }, newParent);\r\n    });\r\n  }, true);\r\n}\r\n\r\ninherits(AssociationBehavior, CommandInterceptor);\r\n\r\nAssociationBehavior.$inject = [\r\n  'injector',\r\n  'modeling'\r\n];"]},"metadata":{},"sourceType":"module"}