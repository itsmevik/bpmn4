{"ast":null,"code":"import inherits from 'inherits';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil.js';\n/**\n * Add start event replacing element with expanded sub process.\n *\n * @param {Injector} injector\n * @param {Modeling} modeling\n */\n\nexport default function SubProcessStartEventBehavior(injector, modeling) {\n  injector.invoke(CommandInterceptor, this);\n  this.postExecuted('shape.replace', function (event) {\n    var oldShape = event.context.oldShape,\n        newShape = event.context.newShape;\n\n    if (!is(newShape, 'bpmn:SubProcess') || !is(oldShape, 'bpmn:Task') || !isExpanded(newShape)) {\n      return;\n    }\n\n    var position = getStartEventPosition(newShape);\n    modeling.createShape({\n      type: 'bpmn:StartEvent'\n    }, position, newShape);\n  });\n}\nSubProcessStartEventBehavior.$inject = ['injector', 'modeling'];\ninherits(SubProcessStartEventBehavior, CommandInterceptor); // helpers //////////\n\nfunction getStartEventPosition(shape) {\n  return {\n    x: shape.x + shape.width / 6,\n    y: shape.y + shape.height / 2\n  };\n}","map":{"version":3,"sources":["/Users/believecreative/Kumar/bpmn/node_modules/bpmn-js/lib/features/modeling/behavior/SubProcessStartEventBehavior.js"],"names":["inherits","CommandInterceptor","is","isExpanded","SubProcessStartEventBehavior","injector","modeling","invoke","postExecuted","event","oldShape","context","newShape","position","getStartEventPosition","createShape","type","$inject","shape","x","width","y","height"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAOC,kBAAP,MAA+B,2CAA/B;AAEA,SAASC,EAAT,QAAmB,yBAAnB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA;;;;;;;AAMA,eAAe,SAASC,4BAAT,CAAsCC,QAAtC,EAAgDC,QAAhD,EAA0D;AACvED,EAAAA,QAAQ,CAACE,MAAT,CAAgBN,kBAAhB,EAAoC,IAApC;AAEA,OAAKO,YAAL,CAAkB,eAAlB,EAAmC,UAASC,KAAT,EAAgB;AACjD,QAAIC,QAAQ,GAAGD,KAAK,CAACE,OAAN,CAAcD,QAA7B;AAAA,QACIE,QAAQ,GAAGH,KAAK,CAACE,OAAN,CAAcC,QAD7B;;AAGA,QACE,CAACV,EAAE,CAACU,QAAD,EAAW,iBAAX,CAAH,IACA,CAACV,EAAE,CAACQ,QAAD,EAAW,WAAX,CADH,IAEA,CAACP,UAAU,CAACS,QAAD,CAHb,EAIE;AACA;AACD;;AAED,QAAIC,QAAQ,GAAGC,qBAAqB,CAACF,QAAD,CAApC;AAEAN,IAAAA,QAAQ,CAACS,WAAT,CAAqB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAArB,EAAkDH,QAAlD,EAA4DD,QAA5D;AACD,GAfD;AAgBD;AAEDR,4BAA4B,CAACa,OAA7B,GAAuC,CACrC,UADqC,EAErC,UAFqC,CAAvC;AAKAjB,QAAQ,CAACI,4BAAD,EAA+BH,kBAA/B,CAAR,C,CAEA;;AAEA,SAASa,qBAAT,CAA+BI,KAA/B,EAAsC;AACpC,SAAO;AACLC,IAAAA,CAAC,EAAED,KAAK,CAACC,CAAN,GAAUD,KAAK,CAACE,KAAN,GAAc,CADtB;AAELC,IAAAA,CAAC,EAAEH,KAAK,CAACG,CAAN,GAAUH,KAAK,CAACI,MAAN,GAAe;AAFvB,GAAP;AAID","sourcesContent":["import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from '../../../util/ModelUtil';\nimport { isExpanded } from '../../../util/DiUtil.js';\n\n/**\n * Add start event replacing element with expanded sub process.\n *\n * @param {Injector} injector\n * @param {Modeling} modeling\n */\nexport default function SubProcessStartEventBehavior(injector, modeling) {\n  injector.invoke(CommandInterceptor, this);\n\n  this.postExecuted('shape.replace', function(event) {\n    var oldShape = event.context.oldShape,\n        newShape = event.context.newShape;\n\n    if (\n      !is(newShape, 'bpmn:SubProcess') ||\n      !is(oldShape, 'bpmn:Task') ||\n      !isExpanded(newShape)\n    ) {\n      return;\n    }\n\n    var position = getStartEventPosition(newShape);\n\n    modeling.createShape({ type: 'bpmn:StartEvent' }, position, newShape);\n  });\n}\n\nSubProcessStartEventBehavior.$inject = [\n  'injector',\n  'modeling'\n];\n\ninherits(SubProcessStartEventBehavior, CommandInterceptor);\n\n// helpers //////////\n\nfunction getStartEventPosition(shape) {\n  return {\n    x: shape.x + shape.width / 6,\n    y: shape.y + shape.height / 2\n  };\n}\n"]},"metadata":{},"sourceType":"module"}