{"ast":null,"code":"import { is } from '../../util/ModelUtil';\nimport { isExpanded } from '../../util/DiUtil';\nvar LABEL_WIDTH = 30,\n    LABEL_HEIGHT = 30;\n/**\n * BPMN-specific hit zones and interaction fixes.\n *\n * @param {EventBus} eventBus\n * @param {InteractionEvents} interactionEvents\n */\n\nexport default function BpmnInteractionEvents(eventBus, interactionEvents) {\n  this._interactionEvents = interactionEvents;\n  var self = this;\n  eventBus.on(['interactionEvents.createHit', 'interactionEvents.updateHit'], function (context) {\n    var element = context.element,\n        gfx = context.gfx;\n\n    if (is(element, 'bpmn:Lane')) {\n      return self.createParticipantHit(element, gfx);\n    } else if (is(element, 'bpmn:Participant')) {\n      if (isExpanded(element)) {\n        return self.createParticipantHit(element, gfx);\n      } else {\n        return self.createDefaultHit(element, gfx);\n      }\n    } else if (is(element, 'bpmn:SubProcess')) {\n      if (isExpanded(element)) {\n        return self.createSubProcessHit(element, gfx);\n      } else {\n        return self.createDefaultHit(element, gfx);\n      }\n    }\n  });\n}\nBpmnInteractionEvents.$inject = ['eventBus', 'interactionEvents'];\n\nBpmnInteractionEvents.prototype.createDefaultHit = function (element, gfx) {\n  this._interactionEvents.removeHits(gfx);\n\n  this._interactionEvents.createDefaultHit(element, gfx); // indicate that we created a hit\n\n\n  return true;\n};\n\nBpmnInteractionEvents.prototype.createParticipantHit = function (element, gfx) {\n  // remove existing hits\n  this._interactionEvents.removeHits(gfx); // add outline hit\n\n\n  this._interactionEvents.createBoxHit(gfx, 'click-stroke', {\n    width: element.width,\n    height: element.height\n  }); // add label hit\n\n\n  this._interactionEvents.createBoxHit(gfx, 'all', {\n    width: LABEL_WIDTH,\n    height: element.height\n  }); // indicate that we created a hit\n\n\n  return true;\n};\n\nBpmnInteractionEvents.prototype.createSubProcessHit = function (element, gfx) {\n  // remove existing hits\n  this._interactionEvents.removeHits(gfx); // add outline hit\n\n\n  this._interactionEvents.createBoxHit(gfx, 'click-stroke', {\n    width: element.width,\n    height: element.height\n  }); // add label hit\n\n\n  this._interactionEvents.createBoxHit(gfx, 'all', {\n    width: element.width,\n    height: LABEL_HEIGHT\n  }); // indicate that we created a hit\n\n\n  return true;\n};","map":{"version":3,"sources":["/Users/believecreative/Kumar/bpmn/node_modules/bpmn-js/lib/features/interaction-events/BpmnInteractionEvents.js"],"names":["is","isExpanded","LABEL_WIDTH","LABEL_HEIGHT","BpmnInteractionEvents","eventBus","interactionEvents","_interactionEvents","self","on","context","element","gfx","createParticipantHit","createDefaultHit","createSubProcessHit","$inject","prototype","removeHits","createBoxHit","width","height"],"mappings":"AAAA,SAASA,EAAT,QAAmB,sBAAnB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,IAAIC,WAAW,GAAG,EAAlB;AAAA,IACIC,YAAY,GAAG,EADnB;AAIA;;;;;;;AAMA,eAAe,SAASC,qBAAT,CAA+BC,QAA/B,EAAyCC,iBAAzC,EAA4D;AAEzE,OAAKC,kBAAL,GAA0BD,iBAA1B;AAEA,MAAIE,IAAI,GAAG,IAAX;AAEAH,EAAAA,QAAQ,CAACI,EAAT,CAAY,CACV,6BADU,EAEV,6BAFU,CAAZ,EAGG,UAASC,OAAT,EAAkB;AACnB,QAAIC,OAAO,GAAGD,OAAO,CAACC,OAAtB;AAAA,QACIC,GAAG,GAAGF,OAAO,CAACE,GADlB;;AAGA,QAAIZ,EAAE,CAACW,OAAD,EAAU,WAAV,CAAN,EAA8B;AAC5B,aAAOH,IAAI,CAACK,oBAAL,CAA0BF,OAA1B,EAAmCC,GAAnC,CAAP;AACD,KAFD,MAIA,IAAIZ,EAAE,CAACW,OAAD,EAAU,kBAAV,CAAN,EAAqC;AACnC,UAAIV,UAAU,CAACU,OAAD,CAAd,EAAyB;AACvB,eAAOH,IAAI,CAACK,oBAAL,CAA0BF,OAA1B,EAAmCC,GAAnC,CAAP;AACD,OAFD,MAEO;AACL,eAAOJ,IAAI,CAACM,gBAAL,CAAsBH,OAAtB,EAA+BC,GAA/B,CAAP;AACD;AACF,KAND,MAQA,IAAIZ,EAAE,CAACW,OAAD,EAAU,iBAAV,CAAN,EAAoC;AAClC,UAAIV,UAAU,CAACU,OAAD,CAAd,EAAyB;AACvB,eAAOH,IAAI,CAACO,mBAAL,CAAyBJ,OAAzB,EAAkCC,GAAlC,CAAP;AACD,OAFD,MAEO;AACL,eAAOJ,IAAI,CAACM,gBAAL,CAAsBH,OAAtB,EAA+BC,GAA/B,CAAP;AACD;AACF;AACF,GA1BD;AA4BD;AAEDR,qBAAqB,CAACY,OAAtB,GAAgC,CAC9B,UAD8B,EAE9B,mBAF8B,CAAhC;;AAMAZ,qBAAqB,CAACa,SAAtB,CAAgCH,gBAAhC,GAAmD,UAASH,OAAT,EAAkBC,GAAlB,EAAuB;AACxE,OAAKL,kBAAL,CAAwBW,UAAxB,CAAmCN,GAAnC;;AAEA,OAAKL,kBAAL,CAAwBO,gBAAxB,CAAyCH,OAAzC,EAAkDC,GAAlD,EAHwE,CAKxE;;;AACA,SAAO,IAAP;AACD,CAPD;;AASAR,qBAAqB,CAACa,SAAtB,CAAgCJ,oBAAhC,GAAuD,UAASF,OAAT,EAAkBC,GAAlB,EAAuB;AAE5E;AACA,OAAKL,kBAAL,CAAwBW,UAAxB,CAAmCN,GAAnC,EAH4E,CAK5E;;;AACA,OAAKL,kBAAL,CAAwBY,YAAxB,CAAqCP,GAArC,EAA0C,cAA1C,EAA0D;AACxDQ,IAAAA,KAAK,EAAET,OAAO,CAACS,KADyC;AAExDC,IAAAA,MAAM,EAAEV,OAAO,CAACU;AAFwC,GAA1D,EAN4E,CAW5E;;;AACA,OAAKd,kBAAL,CAAwBY,YAAxB,CAAqCP,GAArC,EAA0C,KAA1C,EAAiD;AAC/CQ,IAAAA,KAAK,EAAElB,WADwC;AAE/CmB,IAAAA,MAAM,EAAEV,OAAO,CAACU;AAF+B,GAAjD,EAZ4E,CAiB5E;;;AACA,SAAO,IAAP;AACD,CAnBD;;AAqBAjB,qBAAqB,CAACa,SAAtB,CAAgCF,mBAAhC,GAAsD,UAASJ,OAAT,EAAkBC,GAAlB,EAAuB;AAE3E;AACA,OAAKL,kBAAL,CAAwBW,UAAxB,CAAmCN,GAAnC,EAH2E,CAK3E;;;AACA,OAAKL,kBAAL,CAAwBY,YAAxB,CAAqCP,GAArC,EAA0C,cAA1C,EAA0D;AACxDQ,IAAAA,KAAK,EAAET,OAAO,CAACS,KADyC;AAExDC,IAAAA,MAAM,EAAEV,OAAO,CAACU;AAFwC,GAA1D,EAN2E,CAW3E;;;AACA,OAAKd,kBAAL,CAAwBY,YAAxB,CAAqCP,GAArC,EAA0C,KAA1C,EAAiD;AAC/CQ,IAAAA,KAAK,EAAET,OAAO,CAACS,KADgC;AAE/CC,IAAAA,MAAM,EAAElB;AAFuC,GAAjD,EAZ2E,CAiB3E;;;AACA,SAAO,IAAP;AACD,CAnBD","sourcesContent":["import { is } from '../../util/ModelUtil';\n\nimport { isExpanded } from '../../util/DiUtil';\n\nvar LABEL_WIDTH = 30,\n    LABEL_HEIGHT = 30;\n\n\n/**\n * BPMN-specific hit zones and interaction fixes.\n *\n * @param {EventBus} eventBus\n * @param {InteractionEvents} interactionEvents\n */\nexport default function BpmnInteractionEvents(eventBus, interactionEvents) {\n\n  this._interactionEvents = interactionEvents;\n\n  var self = this;\n\n  eventBus.on([\n    'interactionEvents.createHit',\n    'interactionEvents.updateHit'\n  ], function(context) {\n    var element = context.element,\n        gfx = context.gfx;\n\n    if (is(element, 'bpmn:Lane')) {\n      return self.createParticipantHit(element, gfx);\n    } else\n\n    if (is(element, 'bpmn:Participant')) {\n      if (isExpanded(element)) {\n        return self.createParticipantHit(element, gfx);\n      } else {\n        return self.createDefaultHit(element, gfx);\n      }\n    } else\n\n    if (is(element, 'bpmn:SubProcess')) {\n      if (isExpanded(element)) {\n        return self.createSubProcessHit(element, gfx);\n      } else {\n        return self.createDefaultHit(element, gfx);\n      }\n    }\n  });\n\n}\n\nBpmnInteractionEvents.$inject = [\n  'eventBus',\n  'interactionEvents'\n];\n\n\nBpmnInteractionEvents.prototype.createDefaultHit = function(element, gfx) {\n  this._interactionEvents.removeHits(gfx);\n\n  this._interactionEvents.createDefaultHit(element, gfx);\n\n  // indicate that we created a hit\n  return true;\n};\n\nBpmnInteractionEvents.prototype.createParticipantHit = function(element, gfx) {\n\n  // remove existing hits\n  this._interactionEvents.removeHits(gfx);\n\n  // add outline hit\n  this._interactionEvents.createBoxHit(gfx, 'click-stroke', {\n    width: element.width,\n    height: element.height\n  });\n\n  // add label hit\n  this._interactionEvents.createBoxHit(gfx, 'all', {\n    width: LABEL_WIDTH,\n    height: element.height\n  });\n\n  // indicate that we created a hit\n  return true;\n};\n\nBpmnInteractionEvents.prototype.createSubProcessHit = function(element, gfx) {\n\n  // remove existing hits\n  this._interactionEvents.removeHits(gfx);\n\n  // add outline hit\n  this._interactionEvents.createBoxHit(gfx, 'click-stroke', {\n    width: element.width,\n    height: element.height\n  });\n\n  // add label hit\n  this._interactionEvents.createBoxHit(gfx, 'all', {\n    width: element.width,\n    height: LABEL_HEIGHT\n  });\n\n  // indicate that we created a hit\n  return true;\n};"]},"metadata":{},"sourceType":"module"}