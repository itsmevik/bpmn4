{"ast":null,"code":"import { is } from '../../util/ModelUtil';\n\nfunction getLabelAttr(semantic) {\n  if (is(semantic, 'bpmn:FlowElement') || is(semantic, 'bpmn:Participant') || is(semantic, 'bpmn:Lane') || is(semantic, 'bpmn:SequenceFlow') || is(semantic, 'bpmn:MessageFlow') || is(semantic, 'bpmn:DataInput') || is(semantic, 'bpmn:DataOutput')) {\n    return 'name';\n  }\n\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return 'text';\n  }\n\n  if (is(semantic, 'bpmn:Group')) {\n    return 'categoryValueRef';\n  }\n}\n\nfunction getCategoryValue(semantic) {\n  var categoryValueRef = semantic['categoryValueRef'];\n\n  if (!categoryValueRef) {\n    return '';\n  }\n\n  return categoryValueRef.value || '';\n}\n\nexport function getLabel(element) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n    if (attr === 'categoryValueRef') {\n      return getCategoryValue(semantic);\n    }\n\n    return semantic[attr] || '';\n  }\n}\nexport function setLabel(element, text, isExternal) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n    if (attr === 'categoryValueRef') {\n      semantic['categoryValueRef'].value = text;\n    } else {\n      semantic[attr] = text;\n    }\n  }\n\n  return element;\n}","map":{"version":3,"sources":["/Users/believecreative/Kumar/bpmn/node_modules/bpmn-js/lib/features/label-editing/LabelUtil.js"],"names":["is","getLabelAttr","semantic","getCategoryValue","categoryValueRef","value","getLabel","element","businessObject","attr","setLabel","text","isExternal"],"mappings":"AAAA,SAASA,EAAT,QAAmB,sBAAnB;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,MACEF,EAAE,CAACE,QAAD,EAAW,kBAAX,CAAF,IACAF,EAAE,CAACE,QAAD,EAAW,kBAAX,CADF,IAEAF,EAAE,CAACE,QAAD,EAAW,WAAX,CAFF,IAGAF,EAAE,CAACE,QAAD,EAAW,mBAAX,CAHF,IAIAF,EAAE,CAACE,QAAD,EAAW,kBAAX,CAJF,IAKAF,EAAE,CAACE,QAAD,EAAW,gBAAX,CALF,IAMAF,EAAE,CAACE,QAAD,EAAW,iBAAX,CAPJ,EAQE;AACA,WAAO,MAAP;AACD;;AAED,MAAIF,EAAE,CAACE,QAAD,EAAW,qBAAX,CAAN,EAAyC;AACvC,WAAO,MAAP;AACD;;AAED,MAAIF,EAAE,CAACE,QAAD,EAAW,YAAX,CAAN,EAAgC;AAC9B,WAAO,kBAAP;AACD;AACF;;AAED,SAASC,gBAAT,CAA0BD,QAA1B,EAAoC;AAClC,MAAIE,gBAAgB,GAAGF,QAAQ,CAAC,kBAAD,CAA/B;;AAEA,MAAI,CAACE,gBAAL,EAAuB;AACrB,WAAO,EAAP;AACD;;AAGD,SAAOA,gBAAgB,CAACC,KAAjB,IAA0B,EAAjC;AACD;;AAED,OAAO,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AAChC,MAAIL,QAAQ,GAAGK,OAAO,CAACC,cAAvB;AAAA,MACIC,IAAI,GAAGR,YAAY,CAACC,QAAD,CADvB;;AAGA,MAAIO,IAAJ,EAAU;AAER,QAAIA,IAAI,KAAK,kBAAb,EAAiC;AAE/B,aAAON,gBAAgB,CAACD,QAAD,CAAvB;AACD;;AAED,WAAOA,QAAQ,CAACO,IAAD,CAAR,IAAkB,EAAzB;AACD;AACF;AAGD,OAAO,SAASC,QAAT,CAAkBH,OAAlB,EAA2BI,IAA3B,EAAiCC,UAAjC,EAA6C;AAClD,MAAIV,QAAQ,GAAGK,OAAO,CAACC,cAAvB;AAAA,MACIC,IAAI,GAAGR,YAAY,CAACC,QAAD,CADvB;;AAGA,MAAIO,IAAJ,EAAU;AAER,QAAIA,IAAI,KAAK,kBAAb,EAAiC;AAC/BP,MAAAA,QAAQ,CAAC,kBAAD,CAAR,CAA6BG,KAA7B,GAAqCM,IAArC;AACD,KAFD,MAEO;AACLT,MAAAA,QAAQ,CAACO,IAAD,CAAR,GAAiBE,IAAjB;AACD;AAEF;;AAED,SAAOJ,OAAP;AACD","sourcesContent":["import { is } from '../../util/ModelUtil';\n\nfunction getLabelAttr(semantic) {\n  if (\n    is(semantic, 'bpmn:FlowElement') ||\n    is(semantic, 'bpmn:Participant') ||\n    is(semantic, 'bpmn:Lane') ||\n    is(semantic, 'bpmn:SequenceFlow') ||\n    is(semantic, 'bpmn:MessageFlow') ||\n    is(semantic, 'bpmn:DataInput') ||\n    is(semantic, 'bpmn:DataOutput')\n  ) {\n    return 'name';\n  }\n\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return 'text';\n  }\n\n  if (is(semantic, 'bpmn:Group')) {\n    return 'categoryValueRef';\n  }\n}\n\nfunction getCategoryValue(semantic) {\n  var categoryValueRef = semantic['categoryValueRef'];\n\n  if (!categoryValueRef) {\n    return '';\n  }\n\n\n  return categoryValueRef.value || '';\n}\n\nexport function getLabel(element) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n\n      return getCategoryValue(semantic);\n    }\n\n    return semantic[attr] || '';\n  }\n}\n\n\nexport function setLabel(element, text, isExternal) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n      semantic['categoryValueRef'].value = text;\n    } else {\n      semantic[attr] = text;\n    }\n\n  }\n\n  return element;\n}"]},"metadata":{},"sourceType":"module"}