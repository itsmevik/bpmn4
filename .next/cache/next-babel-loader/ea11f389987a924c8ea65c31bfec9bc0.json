{"ast":null,"code":"import inherits from 'inherits';\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\nimport { add as collectionAdd, remove as collectionRemove } from 'diagram-js/lib/util/Collections';\nimport { getBusinessObject, is } from '../../../util/ModelUtil';\nimport { createCategoryValue } from './util/CategoryUtil';\nvar HIGH_PRIORITY = 2000;\n/**\n * BPMN specific Group behavior\n */\n\nexport default function GroupBehavior(bpmnFactory, canvas, elementRegistry, eventBus, injector, moddleCopy) {\n  injector.invoke(CommandInterceptor, this);\n  /**\n   * Gets process definitions\n   *\n   * @return {ModdleElement} definitions\n   */\n\n  function getDefinitions() {\n    var rootElement = canvas.getRootElement(),\n        businessObject = getBusinessObject(rootElement);\n    return businessObject.$parent;\n  }\n  /**\n   * Removes a referenced category value for a given group shape\n   *\n   * @param {djs.model.Shape} shape\n   */\n\n\n  function removeReferencedCategoryValue(shape) {\n    var businessObject = getBusinessObject(shape),\n        categoryValue = businessObject.categoryValueRef;\n\n    if (!categoryValue) {\n      return;\n    }\n\n    var category = categoryValue.$parent;\n\n    if (!categoryValue) {\n      return;\n    }\n\n    collectionRemove(category.categoryValue, categoryValue); // cleanup category if it is empty\n\n    if (category && !category.categoryValue.length) {\n      removeCategory(category);\n    }\n  }\n  /**\n   * Removes a given category from the definitions\n   *\n   * @param {ModdleElement} category\n   */\n\n\n  function removeCategory(category) {\n    var definitions = getDefinitions();\n    collectionRemove(definitions.get('rootElements'), category);\n  }\n  /**\n   * Returns all group element in the current registry\n   *\n   * @return {Array<djs.model.shape>} a list of group shapes\n   */\n\n\n  function getGroupElements() {\n    return elementRegistry.filter(function (e) {\n      return is(e, 'bpmn:Group');\n    });\n  }\n  /**\n   * Returns true if given categoryValue is referenced in one of the given elements\n   *\n   * @param {Array<djs.model.shape>} elements\n   * @param {ModdleElement} categoryValue\n   * @return {Boolean}\n   */\n\n\n  function isReferenced(elements, categoryValue) {\n    return elements.some(function (e) {\n      var businessObject = getBusinessObject(e);\n      return businessObject.categoryValueRef && businessObject.categoryValueRef === categoryValue;\n    });\n  }\n  /**\n   * remove referenced category + value when group was deleted\n   */\n\n\n  this.executed('shape.delete', function (event) {\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Group')) {\n      var businessObject = getBusinessObject(shape),\n          categoryValueRef = businessObject.categoryValueRef,\n          groupElements = getGroupElements();\n\n      if (!isReferenced(groupElements, categoryValueRef)) {\n        removeReferencedCategoryValue(shape);\n      }\n    }\n  });\n  /**\n   * re-attach removed category\n   */\n\n  this.reverted('shape.delete', function (event) {\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Group')) {\n      var businessObject = getBusinessObject(shape),\n          categoryValueRef = businessObject.categoryValueRef,\n          definitions = getDefinitions(),\n          category = categoryValueRef ? categoryValueRef.$parent : null;\n      collectionAdd(category.get('categoryValue'), categoryValueRef);\n      collectionAdd(definitions.get('rootElements'), category);\n    }\n  });\n  /**\n   * create new category + value when group was created\n   */\n\n  this.execute('shape.create', function (event) {\n    var context = event.context,\n        shape = context.shape,\n        businessObject = getBusinessObject(shape);\n\n    if (is(businessObject, 'bpmn:Group') && !businessObject.categoryValueRef) {\n      var definitions = getDefinitions(),\n          categoryValue = createCategoryValue(definitions, bpmnFactory); // link the reference to the Group\n\n      businessObject.categoryValueRef = categoryValue;\n    }\n  });\n  this.revert('shape.create', function (event) {\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Group')) {\n      removeReferencedCategoryValue(shape);\n      delete getBusinessObject(shape).categoryValueRef;\n    }\n  }); // copy bpmn:CategoryValue when copying element\n\n  eventBus.on('moddleCopy.canCopyProperty', HIGH_PRIORITY, function (context) {\n    var property = context.property,\n        categoryValue;\n\n    if (is(property, 'bpmn:CategoryValue')) {\n      categoryValue = createCategoryValue(getDefinitions(), bpmnFactory); // return copy of category\n\n      return moddleCopy.copyElement(property, categoryValue);\n    }\n  });\n}\nGroupBehavior.$inject = ['bpmnFactory', 'canvas', 'elementRegistry', 'eventBus', 'injector', 'moddleCopy'];\ninherits(GroupBehavior, CommandInterceptor);","map":{"version":3,"sources":["/Users/believecreative/Kumar/bpmn/node_modules/bpmn-js/lib/features/modeling/behavior/GroupBehavior.js"],"names":["inherits","CommandInterceptor","add","collectionAdd","remove","collectionRemove","getBusinessObject","is","createCategoryValue","HIGH_PRIORITY","GroupBehavior","bpmnFactory","canvas","elementRegistry","eventBus","injector","moddleCopy","invoke","getDefinitions","rootElement","getRootElement","businessObject","$parent","removeReferencedCategoryValue","shape","categoryValue","categoryValueRef","category","length","removeCategory","definitions","get","getGroupElements","filter","e","isReferenced","elements","some","executed","event","context","groupElements","reverted","execute","revert","on","property","copyElement","$inject"],"mappings":"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","sourcesContent":["import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport {\n  add as collectionAdd,\n  remove as collectionRemove\n} from 'diagram-js/lib/util/Collections';\n\nimport {\n  getBusinessObject,\n  is\n} from '../../../util/ModelUtil';\n\nimport {\n  createCategoryValue\n} from './util/CategoryUtil';\n\nvar HIGH_PRIORITY = 2000;\n\n\n/**\n * BPMN specific Group behavior\n */\nexport default function GroupBehavior(\n    bpmnFactory,\n    canvas,\n    elementRegistry,\n    eventBus,\n    injector,\n    moddleCopy\n) {\n  injector.invoke(CommandInterceptor, this);\n\n  /**\n   * Gets process definitions\n   *\n   * @return {ModdleElement} definitions\n   */\n  function getDefinitions() {\n    var rootElement = canvas.getRootElement(),\n        businessObject = getBusinessObject(rootElement);\n\n    return businessObject.$parent;\n  }\n\n  /**\n   * Removes a referenced category value for a given group shape\n   *\n   * @param {djs.model.Shape} shape\n   */\n  function removeReferencedCategoryValue(shape) {\n\n    var businessObject = getBusinessObject(shape),\n        categoryValue = businessObject.categoryValueRef;\n\n    if (!categoryValue) {\n      return;\n    }\n\n    var category = categoryValue.$parent;\n\n    if (!categoryValue) {\n      return;\n    }\n\n    collectionRemove(category.categoryValue, categoryValue);\n\n    // cleanup category if it is empty\n    if (category && !category.categoryValue.length) {\n      removeCategory(category);\n    }\n  }\n\n  /**\n   * Removes a given category from the definitions\n   *\n   * @param {ModdleElement} category\n   */\n  function removeCategory(category) {\n\n    var definitions = getDefinitions();\n\n    collectionRemove(definitions.get('rootElements'), category);\n  }\n\n  /**\n   * Returns all group element in the current registry\n   *\n   * @return {Array<djs.model.shape>} a list of group shapes\n   */\n  function getGroupElements() {\n    return elementRegistry.filter(function(e) {\n      return is(e, 'bpmn:Group');\n    });\n  }\n\n  /**\n   * Returns true if given categoryValue is referenced in one of the given elements\n   *\n   * @param {Array<djs.model.shape>} elements\n   * @param {ModdleElement} categoryValue\n   * @return {Boolean}\n   */\n  function isReferenced(elements, categoryValue) {\n    return elements.some(function(e) {\n\n      var businessObject = getBusinessObject(e);\n\n      return businessObject.categoryValueRef\n        && businessObject.categoryValueRef === categoryValue;\n    });\n  }\n\n  /**\n   * remove referenced category + value when group was deleted\n   */\n  this.executed('shape.delete', function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Group')) {\n\n      var businessObject = getBusinessObject(shape),\n          categoryValueRef = businessObject.categoryValueRef,\n          groupElements = getGroupElements();\n\n      if (!isReferenced(groupElements, categoryValueRef)) {\n        removeReferencedCategoryValue(shape);\n      }\n    }\n  });\n\n  /**\n   * re-attach removed category\n   */\n  this.reverted('shape.delete', function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Group')) {\n\n      var businessObject = getBusinessObject(shape),\n          categoryValueRef = businessObject.categoryValueRef,\n          definitions = getDefinitions(),\n          category = categoryValueRef ? categoryValueRef.$parent : null;\n\n      collectionAdd(category.get('categoryValue'), categoryValueRef);\n      collectionAdd(definitions.get('rootElements'), category);\n    }\n  });\n\n  /**\n   * create new category + value when group was created\n   */\n  this.execute('shape.create', function(event) {\n    var context = event.context,\n        shape = context.shape,\n        businessObject = getBusinessObject(shape);\n\n    if (is(businessObject, 'bpmn:Group') && !businessObject.categoryValueRef) {\n\n      var definitions = getDefinitions(),\n          categoryValue = createCategoryValue(definitions, bpmnFactory);\n\n      // link the reference to the Group\n      businessObject.categoryValueRef = categoryValue;\n    }\n  });\n\n\n  this.revert('shape.create', function(event) {\n\n    var context = event.context,\n        shape = context.shape;\n\n    if (is(shape, 'bpmn:Group')) {\n      removeReferencedCategoryValue(shape);\n\n      delete getBusinessObject(shape).categoryValueRef;\n\n    }\n  });\n\n  // copy bpmn:CategoryValue when copying element\n  eventBus.on('moddleCopy.canCopyProperty', HIGH_PRIORITY, function(context) {\n    var property = context.property,\n        categoryValue;\n\n    if (is(property, 'bpmn:CategoryValue')) {\n      categoryValue = createCategoryValue(getDefinitions(), bpmnFactory);\n\n      // return copy of category\n      return moddleCopy.copyElement(property, categoryValue);\n    }\n  });\n\n}\n\nGroupBehavior.$inject = [\n  'bpmnFactory',\n  'canvas',\n  'elementRegistry',\n  'eventBus',\n  'injector',\n  'moddleCopy'\n];\n\ninherits(GroupBehavior, CommandInterceptor);"]},"metadata":{},"sourceType":"module"}